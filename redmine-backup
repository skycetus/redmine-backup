#! /bin/sh -x
#
# This script does backup copy of all contents, provided by new redmine server
# There are:
#   - redmine self by upgrade instruction
#   - repositories,
#     = bzr
#     = svn
#     = git
#     = hg
#   - configuration
#     = apache2
#     = etckeeper
#
# To run this script you need
#   - have ssh
#   - know how to be root@redmine
#   - know how to use ssh-keygen also ssh-copy-id
#

. shell-error

# Configuration
configure()
{
	local configure

	# From where take resources
	remote=root@redmine

	# where to storage backing stories
	storage=./.storage

	for configure in /etc/$PROG ~/etc/$PROG ~/.config/$PROG ~/.$PROG; do
		test -e $configure && . $configure
	done

	test -n $storage || fatal Wrong storage
	test -n $remote && ssh $remote true || fatal Wrong remote

	printf "Remote:\t%s\n" $remote
	printf "Storage:\t%s\n" $storage

	return 0
}

prepare_storage()
{
	mkdir -p $storage/redmine/files || fatal Can not create redmine storage
	mkdir -p $storage/bzr || fatal Can not create bzr storage
	mkdir -p $storage/git || fatal Can not create git storage
	mkdir -p $storage/hg || fatal Can not create hg storage
	mkdir -p $storage/svn || fatal Can not create svn storage
	mkdir -p $storage/apache2  || fatal Can not create apache storage

	printf "Storage prepared\n"
}

backup_bzr()
{
	printf "Bzr backup not realized yet\n"
}

backup_git()
{
	printf "Git backup not realized yet\n"
}

backup_hg()
{
	printf "Hg backup not realized yet\n"
}

backup_svn()
{
	for repo in $( ssh $remote ls /srv/repos/svn ); do
		printf "Check backup svn repo %s\n", $repo
		svnadmin verify -q $storage/svn/$repo ||
			svnadmin create $storage/svn/$repo ||
				fatal Creation of $storage/svn/$repo failed
		printf "Check remote svn repo %s\n", $repo
		ssh $remote svnadmin verify -q /srv/repos/svn/$repo ||
			fatal Remote svn repository $repo is damaged
		printf "Copying svn repo %s\n", $repo
		rm -rf $storage/svn/.tmp && svnadmin create $storage/svn/.tmp ||
			fatal Creation of tmp repo failed
		ssh $remote svnadmin dump -q /srv/repos/svn/$repo |
			svnadmin load -q $storage/svn/.tmp ||
				fatal Backup of svn repository $repo lost
		svnadmin hotcopy --incremental $storage/svn/.tmp $storage/svn/$repo ||
			fatal Backup of svn repository $repo lost
	done
	printf "Svn backup done.\n"
}

configure ||
	fatal Configuration failed
prepare_storage ||
	fatal Storage preparation failed
backup_bzr ||
	fatal Bazaar backup failed
backup_git ||
	fatal Git backup failed
backup_hg ||
	fatal Mercurial backup failed
backup_svn ||
	fatal Svn backup failed
